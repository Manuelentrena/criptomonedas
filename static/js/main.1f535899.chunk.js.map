{"version":3,"sources":["assets/img/cryptomonedas.png","hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Error.js","components/Formulario.js","components/Cotizacion.js","components/Spinner/Spinner.js","App.js","index.js"],"names":["Label","styled","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomoneda","CoinInfo","Name","FullName","Id","MensajeError","p","Error","mensaje","Boton","button","Formulario","setMoneda","setCriptomoneda","listacripto","setListaCriptomonedas","error","setError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","Object","keys","length","console","log","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","class","Contenedor","Imagen","img","Heading","h1","App","setResultado","cargando","setCargando","url","setTimeout","DISPLAY","src","imagen","atl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f535899.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: none;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst useMoneda = (label, stateInicial, opciones) => {\n  //State de nuestro custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const Seleccionar = () => (\n    <>\n      <Label>{label}</Label>\n      <Select onChange={(e) => actualizarState(e.target.value)} value={state}>\n        <option value=\"\">-- Seleccione una Moneda--</option>\n        {opciones.map((opcion) => (\n          <option key={opcion.codigo} value={opcion.codigo}>\n            {opcion.nombre}\n          </option>\n        ))}\n      </Select>\n    </>\n  );\n\n  //Retornar state, interfz y la Fn que modifica el state\n  return [state, Seleccionar, actualizarState];\n};\n\nexport default useMoneda;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 2.4rem;\n  margin-top: 2rem;\n  display: block;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  display: block;\n  padding: 1rem;\n  -webkit-appearance: none;\n  border-radius: 10px;\n  border: none;\n  font-size: 1.2rem;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst useCriptomoneda = (label, stateInicial, opciones) => {\n  //State de nuestro custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const SelectCripto = () => (\n    <>\n      <Label>{label}</Label>\n      <Select onChange={(e) => actualizarState(e.target.value)} value={state}>\n        <option value=\"\">-- Seleccione una Criptomoneda--</option>\n        {opciones.map((opcion) => (\n          <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>\n            {opcion.CoinInfo.FullName}\n          </option>\n        ))}\n      </Select>\n    </>\n  );\n\n  //Retornar state, interfz y la Fn que modifica el state\n  return [state, SelectCripto, actualizarState];\n};\n\nexport default useCriptomoneda;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst MensajeError = styled.p`\n  background-color: #b7322c;\n  padding: 1rem;\n  color: #fff;\n  font-size: 30px;\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  font-family: \"Bebas Neue\", cursive;\n`;\n\nconst Error = ({ mensaje }) => {\n  return <MensajeError>{mensaje}</MensajeError>;\n};\n\nexport default Error;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport useMoneda from \"../hooks/useMoneda\";\nimport useCriptomoneda from \"../hooks/useCriptomoneda\";\nimport axios from \"axios\";\nimport Error from \"./Error\";\n\nconst Boton = styled.button`\n  margin-top: 20px;\n  font-weight: bold;\n  font-size: 20px;\n  padding: 10px;\n  background-color: #66a2fe;\n  border: none;\n  width: 100%;\n  border-radius: 10px;\n  color: #fff;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #326a60;\n    cursor: pointer;\n  }\n`;\n\nconst Formulario = ({ setMoneda, setCriptomoneda }) => {\n  //State delas criptomonedas\n  const [listacripto, setListaCriptomonedas] = useState([]);\n  const [error, setError] = useState(false);\n  const MONEDAS = [\n    { codigo: \"USD\", nombre: \"Dolar de Estados Unidos\" },\n    { codigo: \"MXN\", nombre: \"Peso Mexicano\" },\n    { codigo: \"EUR\", nombre: \"Euro\" },\n    { codigo: \"CBP\", nombre: \"Libra Esterlina\" },\n  ];\n\n  //Utilizar useMoneda\n  const [moneda, SelectMonedas] = useMoneda(\"Elige tu Moneda\", \"\", MONEDAS);\n  //Utilizar Criptomoneda\n  const [criptomoneda, SelectCripto] = useCriptomoneda(\n    \"Elige tu Criptomoneda\",\n    \"\",\n    listacripto\n  );\n\n  //Ejecutar llamado a la API\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const url =\n        \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD\";\n\n      const resultado = await axios.get(url);\n      setListaCriptomonedas(resultado.data.Data);\n    };\n    consultarAPI();\n  }, []);\n\n  //Cuando el usuario hace submit\n  const cotizarMoneda = (e) => {\n    e.preventDefault();\n\n    //Validar que el Form este relleno\n    if (moneda === \"\" || criptomoneda === \"\") {\n      setError(true);\n      return;\n    }\n    //Una vez validado el form\n    setError(false);\n    setMoneda(moneda);\n    setCriptomoneda(criptomoneda);\n  };\n\n  return (\n    <form onSubmit={cotizarMoneda}>\n      {error ? <Error mensaje=\"Hay un error\" /> : null}\n      <SelectMonedas />\n      <SelectCripto />\n      <Boton type=\"submit\" value=\"Calcular\">\n        CALCULAR\n      </Boton>\n    </form>\n  );\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst ResultadoDiv = styled.div`\n  color: #fff;\n  font-family: Arial, Helvetica, sans-serif;\n  background-color: #fca350;\n  padding: 0.5rem 2rem;\n  border-radius: 10px;\n  margin-top: 2rem;\n`;\n\nconst Info = styled.p`\n  font-size: 18px;\n\n  span {\n    font-weight: bold;\n    color: #4647b9;\n  }\n`;\n\nconst Precio = styled.p`\n  font-size: 30px;\n  span {\n    font-weight: bold;\n    color: #b23330;\n  }\n`;\n\nconst Cotizacion = ({ resultado }) => {\n  if (Object.keys(resultado).length === 0) return null;\n\n  console.log(resultado);\n\n  return (\n    <ResultadoDiv>\n      <Precio>\n        El precio es: <span>{resultado.PRICE}</span>\n      </Precio>\n      <Info>\n        Precio más alto del día: <span>{resultado.HIGHDAY}</span>\n      </Info>\n      <Info>\n        Precio más bajo del día: <span>{resultado.LOWDAY}</span>\n      </Info>\n      <Info>\n        Variación en las últimas 24h: <span>{resultado.CHANGEPCT24HOUR}</span>\n      </Info>\n      <Info>\n        Última Actualización: <span>{resultado.LASTUPDATE}</span>\n      </Info>\n    </ResultadoDiv>\n  );\n};\n\nexport default Cotizacion;\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div class=\"spinner\">\r\n      <div class=\"bounce1\"></div>\r\n      <div class=\"bounce2\"></div>\r\n      <div class=\"bounce3\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport imagen from \"./assets/img/cryptomonedas.png\";\nimport Formulario from \"./components/Formulario\";\nimport axios from \"axios\";\nimport Cotizacion from \"./components/Cotizacion\";\nimport Spinner from \"./components/Spinner/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width: 992px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 4rem;\n  }\n`;\n\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family: \"Bebas Neue\", cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after {\n    content: \"\";\n    width: 100px;\n    height: 6px;\n    background-color: #66a2fe;\n    display: block;\n  }\n`;\n\nfunction App() {\n  const [moneda, setMoneda] = useState(\"\");\n  const [criptomoneda, setCriptomoneda] = useState(\"\");\n  const [resultado, setResultado] = useState({});\n  const [cargando, setCargando] = useState(false);\n\n  useEffect(() => {\n    if (moneda === \"\") return;\n\n    //consultar la api para obtener la cotizacicon\n    const consultarAPI = async () => {\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n      const resultado = await axios.get(url);\n\n      //Mostrar el spinner\n      setCargando(true);\n\n      setTimeout(() => {\n        setCargando(false);\n        setResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 3000);\n    };\n    consultarAPI();\n  }, [moneda, criptomoneda]);\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen src={imagen} atl=\"Imagen criptomonedas\" />\n      </div>\n      <div>\n        <Heading>Cotiza Criptomonedas al Instante</Heading>\n        <Formulario setMoneda={setMoneda} setCriptomoneda={setCriptomoneda} />\n        {cargando ? (\n          <Spinner />\n        ) : (\n          <Cotizacion resultado={resultado}></Cotizacion>\n        )}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}